{"version":3,"sources":["face.js"],"names":["loader","document","querySelector","errorMsg","getElementById","linksDad","deleteButton","style","display","hideLoader","showErrorMsg","errMessage","addEventListener","showAllUrls","isFacebook","AllUrls","img","title","filter","e","type","map","concat","url","join","innerHTML","handleDownloadClick","link","response","data","regeneratorRuntime","async","_context","prev","next","linkInput","value","trim","abrupt","showLoader","awrap","fetch","method","headers","Content-Type","sent","ok","json","hosting","thumb","meta","id","t0","finish","stop","handleDeleteClick","downloadButton"],"mappings":"aACA,IAAMA,OAASC,SAASC,cAAc,WADtCC,SAAAF,SAAAG,eAAA,iBACMJ,UAASC,SAASC,cAAc,gBAGhCG,SAAWJ,SAASC,cAAc,aAFlCC,eAAmBF,SAACG,cAAe,aAInCE,aAAeL,SAASG,eAAe,UAFvCC,WAAWJ,WAMbD,OAAOO,MAAMC,QAAU,SAF3BC,WAAA,WAOIT,OAAOO,MAAMC,QAAU,QAIrBE,aAAe,SAACC,GALtBR,SAAMM,YAAaE,EAAnBR,SAIAI,MAAAC,QAAA,QAOCL,SAASS,iBAAiB,eAAgB,WAAA,OAAOT,SAASI,MAAMC,QAAU,UAIrEK,YAAc,SAACC,EAAYC,EAASC,EAAKC,GAE9C,GAAmB,iBAAfH,EAA+B,CANO,IAAOX,EAASI,EAG3DW,OAAA,SAAAC,GAAA,MAAA,QAAAA,EAAAC,MAAA,eAAAD,EAAAC,OAQGC,IAAI,SAAAF,GAAC,MAAA,+CAAAG,OAPFT,EAAWU,IAOT,8CAAAD,OAPYH,EAA2BF,QAOvC,KAAAK,OAPiDH,EAAAC,KAOjD,8DAJHI,KAAA,IAGFN,SAAOO,UAAPP,mBAAAA,OAAaF,EAAbE,wKAAAA,OACKD,EADLC,mCAAAA,OAQEb,EARFa,eAmBDR,aAAA,mCAI0BgB,oBAAA,WAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAAAP,EAAAQ,UAAAC,MAAAC,OAAA,CAAAL,EAAAE,KAAA,EAAA,MAAA,OAC3BxB,aAAA,4BAD2BsB,EAAAM,OAAA,UAAA,KAAA,EAAA,OAAAC,aAAAP,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAU,MAKbC,MAAA,oCAAb,CAL0BC,OAAA,OAe1BC,QAAS,CAfiBC,eAAA,oBAS3BL,KAAAA,KAAAA,UAAU,CAAAhB,IAAAI,OATiB,KAAA,EAAA,IAK1BjB,EAL0BsB,EAAAa,MAcpBC,GAdoB,CAAAd,EAAAE,KAAA,GAAA,MAAA,OAe1BS,aAAS,6CAfiBX,EAAAM,OAAA,UAAA,KAAA,GAAA,OAAAN,EAAAE,KAAA,GAAAJ,mBAAAU,MAkBpBZ,EAAAmB,QAlBoB,KAAA,GAAA,IAkBLlB,EAlBKG,EAAAa,OAAAhB,EAAAN,KAAAM,EAAAmB,SAAAnB,EAAAoB,OAAApB,EAAAqB,MAAArB,EAAAqB,KAAAjC,OAAAY,EAAAsB,GAAA,CAAAnB,EAAAE,KAAA,GAAA,MAAA,OAarBN,aAbqB,6CAAAI,EAAAM,OAAA,UAAA,KAAA,GAAAzB,YAAAgB,EAAAmB,QAAAnB,EAAAN,IAAAM,EAAAoB,MAAApB,EAAAqB,KAAAjC,OAAAe,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAoB,GAAApB,EAAA,MAAA,GAuBpBtB,aAAAA,6CAvBoB,KAAA,GAAA,OAAAsB,EAAAC,KAAA,GAyCpBxB,aAzCoBuB,EAAAqB,OAAA,IAAA,KAAA,GAAA,IAAA,MAAA,OAAArB,EAAAsB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,GAAA,GAAA,OAAAC,kBAAA,WAgDxBpB,UAAUC,MAAQ,GAhDM/B,SAAAoB,UA+BX,IA/BW+B,eAAA5C,iBAAA,QAAAc,qBAqD5BpB,aAAaM,iBAAiB,QAAS2C","file":"face.min.js","sourcesContent":["// Get all necessary elements from the DOM\r\nconst loader = document.querySelector(\"#loader\"); // Loader Span\r\nconst errorMsg = document.getElementById(\"error-message\"); // Error Massage\r\nconst linkInput = document.querySelector(\".linkOfVideo\"); // Link Input Area\r\nconst linksDad = document.querySelector(\".LinksDad\"); // Videos Result Area\r\nconst downloadButton = document.querySelector(\".download\"); // Download Button\r\nconst deleteButton = document.getElementById(\"delete\"); // Delete Button\r\n\r\n// Function to show the loader element\r\nconst showLoader = () => {\r\n    loader.style.display = \"block\";\r\n};\r\n\r\n// Function to hide the loader element\r\nconst hideLoader = () => {\r\n    loader.style.display = \"none\";\r\n};\r\n\r\n// Function to show an error message with the given text\r\nconst showErrorMsg = (errMessage) => {\r\n\t// Set the error message text content\r\n\terrorMsg.textContent = errMessage;\r\n\t// Show the error message element\r\n\terrorMsg.style.display = \"block\";\r\n\t// Listen to the animationend event on the error message element, then hide it\r\n\terrorMsg.addEventListener(\"animationend\", () => (errorMsg.style.display = \"none\"));\r\n}\r\n\r\n// Function to show all the video URLs retrieved from the API response\r\nconst showAllUrls = (isFacebook, AllUrls, img, title) => {\r\n\t// If the video is from Facebook\r\n\tif (isFacebook === \"facebook.com\") {\r\n\t    // Create HTML for each video URL in the AllUrls array\r\n\t    const linksHtml = AllUrls\r\n\t\t// IF Type Is MP4 && MP3\r\n\t\t.filter(e => e.type === \"mp4\" || e.type === \"opus audio\")\r\n\t\t.map(e => `\r\n\t\t<div class=\"linkUrl\">\r\n\t\t\t<a href=\"${e.url}\" class=\"Link\" id=\"video\" target=\"_blank\">${e.subname} ${e.type} <i class=\"fa-solid fa-video\"></i></a>\r\n\t\t</div>\r\n\t\t`)\r\n\t\t.join('');\r\n\t    // Set the HTML content of the linksDad element\r\n\t    linksDad.innerHTML = `\r\n\t\t<img src=\"${img}\" alt=\"\" style=\"width: 80%; margin: auto 50%; border-radius: 20px;\">\r\n\t\t<br>\r\n\t\t<h1 style=\"text-align: center; color: #000; font-size: 29px; margin: 1em auto;\">${title}</h1>\r\n\t\t<br>\r\n\t\t<br>\r\n\t\t${linksHtml}\r\n\t\t`;\r\n\t} else {\r\n\t\t// If the video is not from Facebook, show an error message\r\n\tshowErrorMsg(\"Please enter a valid video URL\");\r\n\t}\r\n};\r\n\r\n// Function to handle the download button click event\r\nconst handleDownloadClick = async () => {\r\n\t// Get the video URL from the input element\r\n\tconst link = linkInput.value.trim();\r\n\t// If the video URL is empty, show an error message and return\r\n\tif (!link) {\r\n\t\tshowErrorMsg(\"Please enter a video URL\");\r\n\t\treturn;\r\n\t}\r\n\t// Show the loader element\r\n\tshowLoader();\r\n\r\n\ttry {\r\n\t  // Send a POST request to the save-from.net API with the video URL\r\n\tconst response = await fetch('https://save-from.net/api/convert', {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t},\r\n\t\tbody: JSON.stringify({ url: link }),\r\n\t});\r\n    \r\n    // If the response is not OK, show an error message and return\r\n    if (!response.ok) {\r\n        showErrorMsg(\"An error occurred, please try again later\");\r\n        return;\r\n    }\r\n\r\n    // Parse the JSON data from the API response\r\n    const data = await response.json();\r\n\r\n    // If the data is missing any required properties, show an error message and return\r\n    if (!data || !data.url || !data.hosting || !data.thumb || !data.meta || !data.meta.title || !data.id) {\r\n        showErrorMsg(\"An error occurred, please try again later\");\r\n        return;\r\n    }\r\n\r\n    showAllUrls(data.hosting, data.url, data.thumb, data.meta.title);\r\n    } catch (err) {\r\n\t\t// If there's an error, show an error message\r\n        showErrorMsg(\"An error occurred, please try again later\");\r\n    } finally {\r\n        hideLoader();\r\n    }\r\n};\r\n\r\n// Attach a click event listener to the delete button\r\nconst handleDeleteClick = () => {\r\n    // Clear the input field and the URL display area\r\n    linkInput.value = \"\"; // URL Input Area\r\n    linksDad.innerHTML = \"\"; // LInksDad Area\r\n};\r\n\r\ndownloadButton.addEventListener(\"click\", handleDownloadClick);\r\ndeleteButton.addEventListener(\"click\", handleDeleteClick);"]}